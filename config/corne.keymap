// Copyright (c) 2024 Thiago Alves
// SPDX-License-Identifier: MIT

// =============================
// Corne-42 Querty Coding Layout
// =============================
//
// Layer: MAIN [0]
// ╭────────────────── Left-side ──────────────────╮ ╭───────────────── Right-side ──────────────────╮
// ├───────┬───────┬───────┬───────┬───────┬───────┤ ├───────┬───────┬───────┬───────┬───────┬───────┤
// │   󰌒   │   Q   │   W   │   E   │   R   │   T   │ │   Y   │   U   │   I   │   O   │   P   │   -   │
// ├───────┼───────┼───────┼───────┼───────┼───────┤ ├───────┼───────┼───────┼───────┼───────┼───────┤
// │\┊󰘴 ┊⌘`│ A ┊ 󰎥 │   S   │   D   │   F   │   G   │ │   H   │   J   │   K   │   L   │ ; ┊ 󰎥 │ ' ┊ 󰘴 │
// ├───────┼───────┼───────┼───────┼───────┼───────┤ ├───────┼───────┼───────┼───────┼───────┼───────┤
// │(┊󰘶 ┊⌘~│ Z ┊ 󰎨 │   X   │   C   │   V   │   B   │ │   N   │   M   │   ,   │   .   │ / ┊ 󰎨 │ ) ┊ 󰘶 │
// ╰───────┴───────┴───────┼───────┼───────┼───────┤ ├───────┼───────┼───────┼───────┴───────┴───────╯
//                         │ ⎋ ┊ 󰘵 │ 󰭜 ┊ 󰘳 │   ⎋   │ │   ⏎   │ 󱁐 ┊ 󰘳 │ ⎋ ┊ 󰘵 │
//                         ╰───────┴───────┴───────╯ ╰───────┴───────┴───────╯
// Layer: SYMBOLS [1]
// ╭────────────────── Left-side ──────────────────╮ ╭───────────────── Right-side ──────────────────╮
// ├───────┬───────┬───────┬───────┬───────┬───────┤ ├───────┬───────┬───────┬───────┬───────┬───────┤
// │   󰘵   │   !   │   @   │   #   │   $   │   %   │ │   ^   │   &   │   *   │   =   │   {   │   }   │
// ├───────┼───────┼───────┼───────┼───────┼───────┤ ├───────┼───────┼───────┼───────┼───────┼───────┤
// │   󰘴   │   1   │   2   │   3   │   4   │   5   │ │   ←   │   ↓   │   ↑   │   →   │   [   │   ]   │
// ├───────┼───────┼───────┼───────┼───────┼───────┤ ├───────┼───────┼───────┼───────┼───────┼───────┤
// │   󰘲   │   6   │   7   │   8   │   9   │   0   │ │   ↖   │   ↘   │   -   │   +   │   `   │   ~   │
// ╰───────┴───────┴───────┼───────┼───────┼───────┤ ├───────┼───────┼───────┼───────┴───────┴───────╯
//                         │ -🮐🮐🮐- │ -🮐🮐🮐- │ -🮐🮐🮐- │ │ -🮐🮐🮐- │ -🮐🮐🮐- │ -🮐🮐🮐- │
//                         ╰───────┴───────┴───────╯ ╰───────┴───────┴───────╯
// Layer: FN [2]
// ╭────────────────── Left-side ──────────────────╮ ╭───────────────── Right-side ──────────────────╮
// ├───────┬───────┬───────┬───────┬───────┬───────┤ ├───────┬───────┬───────┬───────┬───────┬───────┤
// │       │  ⌘ 1  │  ⌘ 2  │  ⌘ 3  │  ⌘ 4  │  ⌘ 5  │ │  ⌘ 6  │  ⌘ 7  │  ⌘ 8  │  ⌘ 9  │  ⌘ 0  │      │
// ├───────┼───────┼───────┼───────┼───────┼───────┤ ├───────┼───────┼───────┼───────┼───────┼───────┤
// │   F1  │   F2  │   F3  │   F4  │   F5  │   F6  │ │   󰒮   │   󰐎   │   󰒮   │      │   󰖨   │      │
// ├───────┼───────┼───────┼───────┼───────┼───────┤ ├───────┼───────┼───────┼───────┼───────┼───────┤
// │   F7  │   F8  │   F9  │  F10  │  F11  │  F12  │ │  󰂯 1  │  󰂯 2  │  󰂯 3  │  󰂯 4  │  󰂯 5  │      │
// ╰───────┴───────┴───────┼───────┼───────┼───────┤ ├───────┼───────┼───────┼───────┴───────┴───────╯
//                         │   󰯮   │   󰜉   │       │ │   󰂲   │   󰜉   │   󰯮   │
//                         ╰───────┴───────┴───────╯ ╰───────┴───────┴───────╯
//
// NOTE:
// If you're open this file on a text editor, make sure your editor is not "wrapping" long lines,
// and is capable of rendering unicode characters and it's using a font with symbols from the
// NerdFonts fonts (https://www.nerdfonts.com).
//
// To understand this layout there are 3 important things that you need to be aware of:
//
// 1. How I define the "key labels" in this configuration;
// 2. What each symbol I use in the layout documentation means;
// 3. Any special case for a key behavior;
//
// Key label definition
// ====================
// The next table describe the "syntax" I use to define a label on the comments of this
// configuation. The patterns defined next will always be followed, so once you know then, you can
// just by looking ehat a key does:
//
// ┌────────────────────────────────────┬─────────────────────────────────────────────────────────┐
// │ <label>                            │ The symbol indicated by <label> is emitted when the key │
// │                                    │ is pressed.                                             │
// ├────────────────────────────────────┼─────────────────────────────────────────────────────────┤
// │                                    │ Both symbols indicated by both <label>s are emitted     │
// │ <label><label> or <label> <label>  │ when the key is pressed while another key emitting the  │
// │                                    │ symbol indicated by the left <label> is held donw.      │
// ├────────────────────────────────────┼─────────────────────────────────────────────────────────┤
// │                                    │ The symbol indicated by the left <label> is emitted     │
// │ <label> ┊ <label>                  │ when the key is pressed, and the symbol indicated by    │
// │                                    │ the right <label> is emitted when the key is held down. │
// ├────────────────────────────────────┼─────────────────────────────────────────────────────────┤
// │                                    │ The symbol indicated by the left <label> is emitted     │
// │                                    │ when the key is pressed, the symbol indicated by the    │
// │                                    │ middle <label> is emitted when the key is held down,    │
// │ <label> ┊ <label> ┊ <label><label> │ and the symbols indicated by both <label>s on the right │
// │                                    │ cluster are emitted when the key is pressed, while      │
// │                                    │ another key emitting the symbol indicated by the left   │
// │                                    │ <label> on the right-most cluster is held down.         │
// └────────────────────────────────────┴─────────────────────────────────────────────────────────┘
//
// Label symbols definition
// ========================
// The next table contains all the symbols glyphs I used inthe comments of this configuration with
// their respective key definition:
//
// ┌─────────┬──────────────────────┬─────────────┐
// │ Symbol  │ Key definition       │ Alt. symbol │
// ├─────────┼──────────────────────┼─────────────┤
// │    󰘳    │ Command (Cmd)        │      ⌘      │
// │    󰘴    │ Control (Ctrl)       │      ^      │
// │    󰘵    │ Option (Alt)         │      ⌥      │
// │    󰘶    │ Shift                │      ⇧      │
// │    󰭜    │ Backspace (Bksp)     │      ⌫      │
// │    󰹿    │ Forward delete (Del) │      ⌦      │
// │    󰌒    │ Tab                  │      ⇥      │
// │    󱁐    │ Space                │             │
// │    ⏎    │ Enter (Ret)          │             │
// │    ⎋    │ Escape (Esc)         │             │
// │    󰘲    │ Caps-lock word       │      ⇪      │
// │    ↖    │ Home                 │             │
// │    ↘    │ End                  │             │
// │   󰂯 N   │ Bluetooth profile N  │             │
// │    󰂲    │ Clear Bt. profile    │             │
// │        │ Volume up            │             │
// │        │ Volume down          │             │
// │        │ Mute                 │             │
// │    󰐎    │ Play / Pause         │             │
// │    󰒭    │ Skip next            │             │
// │    󰒮    │ Skip previous        │             │
// │    󰖨    │ Brightness up        │             │
// │        │ Brightness down      │             │
// │    󰜉    │ Keyboard restart     │             │
// │    󰯮    │ Bootstrap mode       │             │
// ├─────────┼──────────────────────┼─────────────┤
// │  -🮐🮐🮐-  │ Pass-through layer   │             │
// └─────────┴──────────────────────┴─────────────┘
//
// Special behaviors
// =================
// This section will go over the non-standard behaviors I have on some keys.
//
// Transparent key
// ---------------
// On the above table, I call this key's label "Pass-through layer". The way this key works, is to
// make the key-press go to the main layer of the layour. So, whenever ou see:
//
// -🮐🮐🮐-
//
// You can look in the `MAIN` layer to find what the key will emit.
//
// Backspace
// ---------
// From all the syntax, definitions, and logic I put here, there is one key that its behavior
// could not be described with any of these things.
//
// The 󰭜 (backspace) key.
//
// By default, when you press it, it will delete the character "before" the current cursor
// position. This is still the same here, but when you hold down 󰘶 (shift) and press the
// 󰭜 (backspace) key, it will, instead, behave like a 󰹿 (forward delete).
//
// Caps-lock
// ---------
// The next special behavior I have here, is the 󰘲 (caps-lock), which, in my symbols definition I
// call it "caps-lock word". The reason being, that when that key is pressed, it will put the
// keyboard in CAPS-LOCK mode, but only until a "non-word" character is typed, which will cause the
// keyboard to get back to the normal mode. A "non-word" character here is any alphanumeric symbol
// plus "-" and "_" (in RegEx notation: [-_0-9a-zA-Z]).
//
// Bluetooth keys
// --------------
// The ZMK firmware allow me to have up to 5 bluetooth profiles connected to the keyboard at the
// same time. The keyboard will only send key strokes to the selected profile, but whenever a
// connected device gets closer to the keyboard, it will get connected to it.
//
// I have 6 dedicated keys that perform actions on the bluethooth stack:
//
// 1-5. 󰂯 N (󰂯1, 󰂯2, 󰂯3, 󰂯4, 󰂯5)
//    These five keys select the current profile the keyboard is using. When a profile is not
//    connected to a device, selecting it will put the keyboard in bluetooth pairing mode.
//
// 6. 󰂲
//    This key will disconnect the device on the current profile and clear it, so other device can
//    be paired. As soon as this key is pressed, the keyboard will be put in bluetooth pairing
//    mode.
//
// Conected consumer controls
// --------------------------
// Although I don't use these keys often, it's nice to have them around. On the function layer, I
// have keys to control volume (  up,   down, and   mute), screen brightness (󰖨 up, and  down),
// and media playback (󰐎 play/pause, 󰒭 nex, and 󰒮 previous).
//
// Some systems may not recognize these keys, but since all devices on Apple platforms do, then I
// guess I'm ok with it.
//
// Keyboard system
// ---------------
// Last, I have two dedicated keys to help me with the keyboard firmware in case the hardware
// buttons stop working.
//
// - 󰯮 : The bootstrap key will put the keyboad operating system in "bootstrap" mode, which allow
//   me to flash a new firmware to it. Each half has its own "bootstrap" key, and it can put just
//   the half where the key was pressed in that mode.
//
// - X : The reset key will restart the keyboard and re-load the current flashed firmware back on
//   memory. Each half has its own "reset" key, and it can restart just the half where the key was
//   pressed.

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
  chain-length = <27>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS>;
};

/ {

  behaviors {
    // I'm still trying to figure out the ballance of these options plus the
    // debounce press and release so the `rpi` key will give a realiabily quick
    // hold action, without missfiring it while I'm typing.
    rpi: require_prior_idle {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      //flavor = "hold-preferred";
      flavor = "balanced";
      //flavor = "tap-preferred";
      tapping-term-ms = <175>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <150>;
      bindings = <&kp>, <&kp>;
    };

    bslhgrave: backslash_ctrl_or_cmdgrave {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&mt LCTRL BSLH>, <&kp GRAVE>;
      mods = <(MOD_LGUI|MOD_RGUI)>;
      keep-mods = <(MOD_LGUI|MOD_RGUI)>;
    };

    shfttilde: lparen_shift_or_cmdtilde {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&mt LSHFT LPAR>, <&kp TILDE>;
      mods = <(MOD_LGUI|MOD_RGUI)>;
      keep-mods = <(MOD_LGUI|MOD_RGUI)>;
    };

    bspcdel: backspace_cmd_or_shftdel {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&rpi LGUI BSPC>, <&kp DEL>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    // Layer: MAIN [0]
    // ╭────────────────── Left-side ──────────────────╮        ╭───────────────── Right-side ──────────────────╮
    // ├───────┬───────┬───────┬───────┬───────┬───────┤        ├───────┬───────┬───────┬───────┬───────┬───────┤
    // │   󰌒   │   Q   │   W   │   E   │   R   │   T   │        │   Y   │   U   │   I   │   O   │   P   │   -   │
    // ├───────┼───────┼───────┼───────┼───────┼───────┤        ├───────┼───────┼───────┼───────┼───────┼───────┤
    // │\┊󰘴 ┊⌘`│ A ┊ 󰎥 │   S   │   D   │   F   │   G   │        │   H   │   J   │   K   │   L   │ ; ┊ 󰎥 │ ' ┊ 󰘴 │
    // ├───────┼───────┼───────┼───────┼───────┼───────┤        ├───────┼───────┼───────┼───────┼───────┼───────┤
    // │(┊󰘶 ┊⌘~│ Z ┊ 󰎨 │   X   │   C   │   V   │   B   │        │   N   │   M   │   ,   │   .   │ / ┊ 󰎨 │ ) ┊ 󰘶 │
    // ╰───────┴───────┴───────┼───────┼───────┼───────┤        ├───────┼───────┼───────┼───────┴───────┴───────╯
    //                         │ ⎋ ┊ 󰘵 │ 󰭜 ┊ 󰘳 │   ⎋   │        │   ⏎   │ 󱁐 ┊ 󰘳 │ ⎋ ┊ 󰘵 │
    //                         ╰───────┴───────┴───────╯        ╰───────┴───────┴───────╯
    MAIN {
      bindings = <
        &kp TAB     &kp Q    &kp W  &kp E         &kp R     &kp T     /**/  &kp Y    &kp U            &kp I         &kp O    &kp P       &kp MINUS
        &bslhgrave  &lt 1 A  &kp S  &kp D         &kp F     &kp G     /**/  &kp H    &kp J            &kp K         &kp L    &lt 1 SEMI  &rpi RCTRL SQT
        &shfttilde  &lt 2 Z  &kp X  &kp C         &kp V     &kp B     /**/  &kp N    &kp M            &kp COMMA     &kp DOT  &lt 2 FSLH  &mt RSHFT RPAR
                                    &mt LALT ESC  &bspcdel  &kp ESC   /**/  &kp RET  &rpi RGUI SPACE  &mt RALT ESC
      >;
    };

    // Layer: SYMBOLS [1]
    // ╭────────────────── Left-side ──────────────────╮        ╭───────────────── Right-side ──────────────────╮
    // ├───────┬───────┬───────┬───────┬───────┬───────┤        ├───────┬───────┬───────┬───────┬───────┬───────┤
    // │   󰘵   │   !   │   @   │   #   │   $   │   %   │        │   ^   │   &   │   *   │   =   │   {   │   }   │
    // ├───────┼───────┼───────┼───────┼───────┼───────┤        ├───────┼───────┼───────┼───────┼───────┼───────┤
    // │   󰘴   │   1   │   2   │   3   │   4   │   5   │        │   ←   │   ↓   │   ↑   │   →   │   [   │   ]   │
    // ├───────┼───────┼───────┼───────┼───────┼───────┤        ├───────┼───────┼───────┼───────┼───────┼───────┤
    // │   󰘲   │   6   │   7   │   8   │   9   │   0   │        │   ↖   │   ↘   │   -   │   +   │   `   │   ~   │
    // ╰───────┴───────┴───────┼───────┼───────┼───────┤        ├───────┼───────┼───────┼───────┴───────┴───────╯
    //                         │ -🮐🮐🮐- │ -🮐🮐🮐- │ -🮐🮐🮐- │        │ -🮐🮐🮐- │ -🮐🮐🮐- │ -🮐🮐🮐- │
    //                         ╰───────┴───────┴───────╯        ╰───────┴───────┴───────╯
    SYMBOLS {
      bindings = <
        &kp LALT    &kp EXCL    &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  /**/  &kp CARET  &kp AMPS  &kp STAR   &kp EQUAL  &kp LBRC   &kp RBRC
        &kp LCTRL   &kp N1      &kp N2  &kp N3    &kp N4    &kp N5     /**/  &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT  &kp LBKT   &kp RBKT 
        &caps_word  &kp N6      &kp N7  &kp N8    &kp N9    &kp N0     /**/  &kp HOME   &kp END   &kp MINUS  &kp PLUS   &kp GRAVE  &kp TILDE
                                        &trans    &trans    &trans     /**/  &trans     &trans    &trans
      >;
    };

    // Layer: FN [2]
    // ╭────────────────── Left-side ──────────────────╮        ╭───────────────── Right-side ──────────────────╮
    // ├───────┬───────┬───────┬───────┬───────┬───────┤        ├───────┬───────┬───────┬───────┬───────┬───────┤
    // │       │  ⌘ 1  │  ⌘ 2  │  ⌘ 3  │  ⌘ 4  │  ⌘ 5  │        │  ⌘ 6  │  ⌘ 7  │  ⌘ 8  │  ⌘ 9  │  ⌘ 0  │      │
    // ├───────┼───────┼───────┼───────┼───────┼───────┤        ├───────┼───────┼───────┼───────┼───────┼───────┤
    // │   F1  │   F2  │   F3  │   F4  │   F5  │   F6  │        │   󰒮   │   󰐎   │   󰒮   │      │   󰖨   │      │
    // ├───────┼───────┼───────┼───────┼───────┼───────┤        ├───────┼───────┼───────┼───────┼───────┼───────┤
    // │   F7  │   F8  │   F9  │  F10  │  F11  │  F12  │        │  󰂯 1  │  󰂯 2  │  󰂯 3  │  󰂯 4  │  󰂯 5  │      │
    // ╰───────┴───────┴───────┼───────┼───────┼───────┤        ├───────┼───────┼───────┼───────┴───────┴───────╯
    //                         │   󰯮   │   󰜉   │       │        │   󰂲   │   󰜉   │   󰯮   │
    //                         ╰───────┴───────┴───────╯        ╰───────┴───────┴───────╯
    FN {
      bindings = <
        &none   &kp LG(N1)  &kp LG(N2)  &kp LG(N3)   &kp LG(N4)  &kp LG(N5)  /**/  &kp LG(N6)    &kp LG(N7)    &kp LG(N8)    &kp LG(N9)    &kp LG(N0)    &kp C_VOL_UP
        &kp F1  &kp F2      &kp F3      &kp F4       &kp F5      &kp F6      /**/  &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_DN
        &kp F7  &kp F8      &kp F9      &kp F10      &kp F11     &kp F12     /**/  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp C_MUTE
                                        &bootloader  &sys_reset  &none       /**/  &bt BT_CLR    &sys_reset    &bootloader
      >;
    };
  };
};
